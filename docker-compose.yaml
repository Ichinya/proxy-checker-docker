version: '3'

services:
  rabbit_mq:
    image: rabbitmq:alpine
    restart: always
    container_name: rabbit_mq
    volumes:
      - rabbit_mqdata:/usr/share/rabbitmq/data
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M

  producer:
    image: ghcr.io/ichinya/proxy_producer:main
    container_name: proxy_producer
    restart: always
    depends_on:
      - rabbit_mq
      - database
    environment:
      AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
      DB_HOST: database
      DB_NAME: 'homestead'
      DB_PORT: 5432
      DB_USER: 'user'
      DB_PASS: 'pass'
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 100M

  producer-cron:
    extends: producer
    container_name: producer_cron
    command: ["/code/cron.sh"]

  producer-import:
    extends: producer
    container_name: producer_import
    restart: "no"
    command: ["python3", "update_list_proxy.py"]
    deploy:
      resources:
        limits:
          memory: 100M

  proxy-checker:
    image: ghcr.io/ichinya/proxy_checker:main
    restart: always
    depends_on:
      - rabbit_mq
      - database
    environment:
      AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          memory: 30M
        reservations:
          memory: 100M

  database:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=homestead
    volumes:
      - pg_project:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user" ]
      interval: 5s
      retries: 5
    ports:
      - 5432:5432
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 200M

volumes:
  pg_project:
  rabbit_mqdata:
    driver: local
